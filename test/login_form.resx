<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIEAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABAk7wgNJnTzziFtoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAKpbMMDqKwu89r+3/RaLW70CTvDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA6reaAPpbU/zyu7f9KrOP/QJO8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADqt5oA9lNP/PK7t/0qs4/9Ak7yAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFmt
        yq+Aw9j/v721/7i1sP+gnpn/0c7Ev7Kvqd/Jx8L/z8zH/83Lxv/MysX/yMbB/52clf9+fXZAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAV6S+EGG10M+XrK7/ysjA/6OhnP+GhIH/p6Wh/9LPyv/Qzsn/z8zH/83Lxv+ysar/jIuErwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAXKa+EGirv4Cfp6PvxMK6/8/Mxv/V0sz/09HL/9LPyv/GxL7/r66m/5CP
        iL+FhH4QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACioZpgrayk37Syqv+xr6f/q6qi/6Oh
        ms+SkYpgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////4////8H////B////wf///8H////B////wf/H/8H/g//B
        /wP/wf4D/8H8B//B+A//wfAf/8Hgf//AwH//AAD//gAB//4AA//8AAP/zAAH/8AAB//AAAf/8AAH//wA
        B//+AAf//gAP//8AD///4D////////////8=
</value>
  </data>
</root>